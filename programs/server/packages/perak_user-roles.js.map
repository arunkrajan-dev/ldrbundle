{"version":3,"sources":["meteor://ðŸ’»app/packages/perak_user-roles/packages/perak_user-roles.js"],"names":[],"mappingsoG","file":"/packages/perak_user-roles.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                      //\n// packages/perak:user-roles/both/collections/users.js                                  //\n//                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////\n                                                                                        //\nUsers = Meteor.users;                                                                   // 1\n                                                                                        // 2\nUsers.isInRole = function (userId, role) {                                              // 3\n  var user = Users.findOne({_id: userId});                                              // 4\n  return !!(user && user.roles && user.roles.indexOf(role) != -1);                      // 5\n};                                                                                      // 6\n                                                                                        // 7\nUsers.isInRoles = function (userId, roleList) {                                         // 8\n\tvar user = Users.findOne({_id: userId});                                               // 9\n\tif(!user || !user.roles) {                                                             // 10\n\t\treturn false;                                                                         // 11\n\t}                                                                                      // 12\n                                                                                        // 13\n\tvar granted = _.intersection(roleList, user.roles);                                    // 14\n\tif(!granted || granted.length == 0) {                                                  // 15\n\t\treturn false;                                                                         // 16\n\t}                                                                                      // 17\n\treturn true;                                                                           // 18\n};                                                                                      // 19\n                                                                                        // 20\nUsers.isAdmin = function (userId) {                                                     // 21\n  return Users.isInRole(userId, \"admin\");                                               // 22\n};                                                                                      // 23\n                                                                                        // 24\nUsers.isAdminOrInRole = function (userId, role) {                                       // 25\n  return Users.isInRole(userId, \"admin\") || Users.isInRole(userId, role);               // 26\n};                                                                                      // 27\n                                                                                        // 28\n//////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                      //\n// packages/perak:user-roles/server/collections/users.js                                //\n//                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////\n                                                                                        //\n// If you want to modify the rights on user updates                                     // 1\n// then add a new allow rule in your app.                                               // 2\n                                                                                        // 3\nUsers.allow({                                                                           // 4\n\t// doesn't allow insert or removal of users from untrusted code                        // 5\n    update: function (userId, doc, fieldNames, modifier) {                              // 6\n        return Users.isAdmin(userId)                                                    // 7\n        \t\t// only admins can update user roles via the client                           // 8\n        \t\t|| (doc._id === userId && !_.contains(fieldNames, 'roles'));                  // 9\n    }                                                                                   // 10\n});                                                                                     // 11\n//////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                      //\n// packages/perak:user-roles/server/publications/admin_user.js                          //\n//                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////\n                                                                                        //\nMeteor.publish(\"admin_user\", function(_id){                                             // 1\n\treturn Users.isAdmin(this.userId) ? Users.find({_id: _id}) : this.ready();             // 2\n});                                                                                     // 3\n                                                                                        // 4\n//////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                      //\n// packages/perak:user-roles/server/publications/admin_users.js                         //\n//                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////\n                                                                                        //\nMeteor.publish(\"admin_users\", function() {                                              // 1\n\treturn Users.isAdmin(this.userId) ? Meteor.users.find({}, {fields: {profile: 1, roles: 1, emails: 1}}) : this.ready();\n});                                                                                     // 3\n                                                                                        // 4\n//////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                      //\n// packages/perak:user-roles/server/publications/current_user_data.js                   //\n//                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////\n                                                                                        //\nMeteor.publish(\"current_user_data\", function () {                                       // 1\n\treturn Meteor.users.find( { _id: this.userId }, { fields: {profile: 1 , roles: 1} } ); // 2\n});                                                                                     // 3\n                                                                                        // 4\n//////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}